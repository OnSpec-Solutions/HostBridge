<Project>
    <!-- defaults for src + tests -->
    <PropertyGroup>
        <LangVersion>preview</LangVersion>
        <Nullable>enable</Nullable>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <!-- Work around NuGet static graph quirks on some Windows runners with mixed SDK/classic projects -->
        <RestoreUseStaticGraphEvaluation>false</RestoreUseStaticGraphEvaluation>
    </PropertyGroup>

    <!-- Enable XML docs + packaging metadata for libraries in src (not tests/examples) -->
    <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectDirectory)', '[\\/]src([\\/]|$)')) AND !$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectName)', '\\.Tests$')) AND !$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectDirectory)', '[\\/]examples([\\/]|$)'))">
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>$(NoWarn);1591</NoWarn>
        <!-- Package license expression for NuGet -->
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <!-- Enable central package management for src projects -->
        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
        <!-- SourceLink / symbols -->
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <Deterministic>true</Deterministic>
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>

    <!-- Add NBGV to src projects (dev dependency) -->
    <ItemGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectDirectory)', '[\\/]src([\\/]|$)'))">
        <PackageReference Include="Nerdbank.GitVersioning" PrivateAssets="all" />
    </ItemGroup>

    <!-- Conditional strong-name signing for src in Release (only when key is present) -->
    <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectDirectory)', '[\\/]src([\\/]|$)')) AND '$(Configuration)' == 'Release' AND Exists('$(MSBuildThisFileDirectory)HostBridge.snk')">
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)HostBridge.snk</AssemblyOriginatorKeyFile>
    </PropertyGroup>

    <!-- relax tests -->
    <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectName)', '\\.Tests$'))">
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <!-- Ensure tests are not strong-name signed -->
        <SignAssembly>false</SignAssembly>
        <!-- Disable central package management for tests (they keep explicit versions for now) -->
        <ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>
    </PropertyGroup>

    <!-- revert for example apps -->
    <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectDirectory)', '[\\/]examples([\\/]|$)'))">
        <LangVersion>default</LangVersion>
        <Nullable>disable</Nullable>
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <!-- Do not sign example apps -->
        <SignAssembly>false</SignAssembly>
        <!-- Disable central package management for examples (they keep explicit versions for now) -->
        <ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>
    </PropertyGroup>
</Project>
